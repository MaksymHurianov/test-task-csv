{"version":3,"sources":["Header.js","Rows.js","Error.js","App.js","reportWebVitals.js","index.js"],"names":["Header","headerNames","className","map","name","index","Rows","rows","phonesArr","emailsArr","row","styleRows","stylePhone","i","length","id","toLowerCase","styleAge","backgroundColor","undefined","styleExperience","slice","styleDate","test","Date","parse","now","styleLicenceNumber","styleEmail","styleHasChildren","styleYearlyIncome","styleLicenseState","indexOf","styleAll","style","Error","border","width","margin","marginTop","textAlign","fontSize","padding","App","useState","headerWithIdAndDuplicate","setHeaderWithIdAndDuplicate","rowsWithIdAndDuplicate","setRowsWithIdAndDuplicate","isValidFile","setIsValidFile","setPhonesArr","setEmailsArr","reducedStatesArr","states","alabama","alaska","arizona","arkansas","california","colorado","connecticut","delaware","florida","georgia","hawaii","idaho","illinois","indiana","iowa","kansas","kentucky","louisiana","maine","maryland","massachusetts","michigan","minnesota","mississippi","missouri","montana","nebraska","nevada","ohio","oklahoma","oregon","pennsylvania","tennessee","texas","utah","vermont","virginia","washington","wisconsin","wyoming","statesArr","Object","keys","key","push","fileTypes","handleFiles","files","reader","FileReader","onloadend","e","result","header","transformHeader","h","trim","data","skipEmptyLines","transform","phoneValidation","toUpperCase","hasChildrenValidation","toFixed","earlyIncomeValidation","reducedStatesArrItem","state","split","stateTrimmed","join","licenseStatesValidation","readAsText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.989eeac6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header({headerNames}){\r\n\r\n    return(\r\n        <thead className={'header'}>\r\n        <tr>\r\n            {headerNames.map((name, index) => {\r\n                return <td key={index}>{name}</td>\r\n            })}\r\n        </tr>\r\n        </thead>\r\n    )\r\n}\r\nexport default Header","import React from 'react'\r\n\r\nfunction Rows({rows, headerNames, phonesArr, emailsArr}) {\r\n\r\n    return (\r\n        <tbody>\r\n\r\n        {rows.map((row, index, rows) => {\r\n            let styleRows = []\r\n            let stylePhone = {}\r\n            for(let i = 0; i < phonesArr.length; ++i){\r\n                if(row['Phone'] === phonesArr[i] && row.id !== i && row['Phone'] !== ''){\r\n                    row['Duplicate with'] = i\r\n                    break\r\n                }\r\n            }\r\n            for(let i = 0; i < emailsArr.length; ++i){\r\n                if(row['Email'].toLowerCase() === emailsArr[i].toLowerCase() && row.id !== i && row['Email'] !== ''){\r\n                    row['Duplicate with'] = i\r\n                    break\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < headerNames.length; ++i) {\r\n                const styleAge = (row['Age'] < 21 || !+row['Age']) && headerNames[i] === 'Age' ? {backgroundColor: 'red'} : undefined\r\n                const styleExperience = (+row['Experience'] <= 0 || row['Age'] - row['Experience'] < 0) && headerNames[i] === 'Experience' ? {backgroundColor: 'red'} : undefined\r\n\r\n                if (row['Phone']) {\r\n                    stylePhone = (row['Phone'].length !== 12 || row['Phone'].slice(0, 2) !== '+1') && headerNames[i] === 'Phone' ? {backgroundColor: 'red'} : undefined\r\n                }else{\r\n                    stylePhone = headerNames[i] === 'Phone' ? {backgroundColor: 'red'} : undefined\r\n                }\r\n\r\n                const styleDate = !((/^\\d{4}\\-\\d{1,2}\\-\\d{1,2}$/.test(row['Expiration date']) || (/(0[1-9]|1[012])[ /](0[1-9]|[12][0-9]|3[01])[ /](19|20)\\d\\d/.test(row['Expiration date'])))\r\n                    && Date.parse(row['Expiration date']) > Date.now()) && headerNames[i] === 'Expiration date' ? {backgroundColor: 'red'} : undefined\r\n\r\n                const styleLicenceNumber = !(/^[a-zA-Z\\d]{5}$/).test(row['License number']) && headerNames[i] === 'License number'? {backgroundColor: 'red'} : undefined\r\n                const styleEmail = !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(row['Email']) && headerNames[i] === 'Email'? {backgroundColor: 'red'} : undefined\r\n                const styleHasChildren = !((row['Has children'] === ('TRUE')) || (row['Has children'] === ('FALSE'))) && headerNames[i] === 'Has children'? {backgroundColor: 'red'} : undefined\r\n                const styleYearlyIncome = !(+row['Yearly Income'] && +row['Yearly Income'] < 1000000) && headerNames[i] === 'Yearly Income'? {backgroundColor: 'red'} : undefined\r\n                const styleLicenseState = (row['License states']).indexOf(\"not valid\") >= 0 && headerNames[i] === 'License states'? {backgroundColor: 'red'} : undefined\r\n\r\n                const styleAll = {...styleAge, ...styleExperience, ...stylePhone, ...styleDate, ...styleLicenceNumber, ...styleEmail, ...styleHasChildren, ...styleYearlyIncome, ...styleLicenseState}\r\n\r\n                styleRows = [...styleRows, (<td key={i} style={styleAll}>{rows[index][headerNames[i]]}</td>)]\r\n            }\r\n            return (\r\n                <tr key={index}>\r\n                    {styleRows}\r\n                </tr>\r\n            )\r\n        })}\r\n\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default Rows","import React from 'react'\r\n\r\nfunction Error(){\r\n\r\n    const styleErrorField = {\r\n        backgroundColor: '#f65337',\r\n        border: '1px solid black',\r\n        width: '500px',\r\n        margin: 'auto',\r\n        marginTop: '150px'\r\n    }\r\n    const styleText = {\r\n        textAlign: 'center',\r\n        fontSize: '20px',\r\n        padding: '20px'\r\n    }\r\n    return(\r\n            <div style={styleErrorField}>\r\n                <p style={styleText}>File format is not correct</p>\r\n            </div>\r\n\r\n    )\r\n}\r\nexport default Error","import './App.css';\nimport React, {useState} from 'react'\nimport ReactFileReader from 'react-file-reader'\nimport {parse} from 'papaparse'\nimport Header from \"./Header\";\nimport Rows from \"./Rows\";\nimport Error from \"./Error\";\n\nfunction App() {\n\n    const [headerWithIdAndDuplicate, setHeaderWithIdAndDuplicate] = useState([])\n    const [rowsWithIdAndDuplicate, setRowsWithIdAndDuplicate] = useState([])\n    const [isValidFile, setIsValidFile] = useState(true)\n    const [phonesArr, setPhonesArr] = useState([])\n    const [emailsArr, setEmailsArr] = useState([])\n    const reducedStatesArr = []\n    const states = {\n        alabama: 'AL',\n        alaska: 'AK',\n        arizona: 'AZ',\n        arkansas: 'AR',\n        california: 'CA',\n        colorado: 'CO',\n        connecticut: 'CT',\n        delaware: 'DE',\n        florida: 'FL',\n        georgia: 'GA',\n        hawaii: 'HI',\n        idaho: 'ID',\n        illinois: 'IL',\n        indiana: 'IN',\n        iowa: 'IA',\n        kansas: 'KS',\n        kentucky: 'KY',\n        louisiana: 'LA',\n        maine: 'ME',\n        maryland: 'MD',\n        massachusetts: 'MA',\n        michigan: 'MI',\n        minnesota: 'MN',\n        mississippi: 'MS',\n        missouri: 'MO',\n        montana: 'MT',\n        nebraska: 'NE',\n        nevada: 'NV',\n        'new hampshire': 'NH',\n        'new jersey': 'NJ',\n        'new mexico': 'NM',\n        'new york': 'NY',\n        'north carolina': 'NC',\n        'north dakota': 'ND',\n        ohio: 'OH',\n        oklahoma: 'OK',\n        oregon: 'OR',\n        pennsylvania: 'PA',\n        'rhode island': 'RI',\n        'south carolina': 'SC',\n        'south dakota': 'SD',\n        tennessee: 'TN',\n        texas: 'TX',\n        utah: 'UT',\n        vermont: 'VT',\n        virginia: 'VA',\n        washington: 'WA',\n        'west virginia': 'WV',\n        wisconsin: 'WI',\n        wyoming: 'WY'\n    }\n    const statesArr = (Object.keys(states))\n\n    for (let key in states) {\n        reducedStatesArr.push(states[key])\n    }\n\n    const handleFiles = files => {\n\n        if (files[0].name.slice(-3) !== 'csv') {\n            setIsValidFile(false)\n            return\n        } else {\n            setIsValidFile(true)\n        }\n        let reader = new FileReader();\n\n        reader.onloadend = function (e) {\n\n            if (reader.result) {\n\n                const headerNames = Object.keys(parse(reader.result, {\n                    header: true,\n                    transformHeader: function (h) {\n                        return h.trim();\n                    },\n                }).data[0])\n\n                const rows = (parse(reader.result, {\n                    skipEmptyLines: true,\n                    header: true,\n                    transformHeader: function (h) {\n                        return h.trim();\n                    },\n                    transform: function (i) {\n                        return i.trim()\n                    }\n                }).data)\n                if (headerNames.indexOf('Full Name') === -1 || headerNames.indexOf('Email') === -1 || headerNames.indexOf('Phone') === -1) {\n                    setIsValidFile(false)\n                    return\n                }\n\n                const headerWithIdAndDuplicate = (['id', ...headerNames, 'Duplicate with'])\n\n                function phoneValidation(i) {\n                    if (headerNames.indexOf('Phone') !== -1) {\n                        if (i['Phone'].slice(0, 1) === '1' && i['Phone'].length === 11) {\n                            i['Phone'] = `+${i['Phone']}`\n\n                        } else if (i['Phone'].length === 10) {\n                            i['Phone'] = `+1${i['Phone']}`\n                        }\n                    }\n                }\n\n                function hasChildrenValidation(i) {\n                    if (headerNames.indexOf('Has children') !== -1) {\n                        if (i['Has children'] === '') {\n                            i['Has children'] = 'FALSE'\n                        } else if ((i['Has children'].toUpperCase() === 'FALSE') || (i['Has children'].toUpperCase() === 'TRUE')) {\n                            i['Has children'] = i['Has children'].toUpperCase()\n                        }\n                    }\n                }\n\n                function earlyIncomeValidation(i) {\n                    if (headerNames.indexOf('Yearly Income') !== -1) {\n                        if (i['Yearly Income'] !== '' && i['Yearly Income'] < 1000000) {\n                            i['Yearly Income'] = ((+i['Yearly Income']).toFixed(2))\n                        }\n                    }\n                }\n\n                function licenseStatesValidation(i) {\n                    let reducedStatesArrItem = []\n                    if (headerNames.indexOf('License states') !== -1) {\n                        if (i['License states'].indexOf('|') !== -1) {\n                            let state = i['License states'].split('|')\n                            for (let i = 0; i < state.length; ++i) {\n                                if ((reducedStatesArr).indexOf(state[i].trim()) !== -1) {\n                                    reducedStatesArrItem.push(state[i].trim())\n                                } else {\n                                    let stateTrimmed = (state[i].trim().toLowerCase())\n                                    reducedStatesArrItem.push(statesArr.indexOf(stateTrimmed) !== -1 ? states[stateTrimmed] : 'not valid')\n                                }\n                            }\n                            i['License states'] = reducedStatesArrItem.join(' | ')\n\n                        } else {\n                            if ((reducedStatesArr).indexOf(i['License states']) !== -1) {\n                            } else {\n                                i['License states'] = ((statesArr.indexOf(i['License states'].toLowerCase()) !== -1)\n                                    ? states[statesArr[statesArr.indexOf(i['License states'].toLowerCase())]] : 'not valid')\n                            }\n                        }\n                    }\n                }\n\n                const rowsWithIdAndDuplicate = rows.map((i, index) => {\n\n                    phoneValidation(i)\n                    hasChildrenValidation(i)\n                    earlyIncomeValidation(i)\n                    licenseStatesValidation(i)\n\n                    return {id: index, ...i, 'Duplicate with': ''}\n                })\n                setPhonesArr(rows.map(i => {\n                    return i['Phone']\n                }))\n                setEmailsArr(rows.map(i => {\n                    return i['Email']\n                }))\n\n                setHeaderWithIdAndDuplicate(headerWithIdAndDuplicate)\n                setRowsWithIdAndDuplicate(rowsWithIdAndDuplicate)\n            } else {\n                setHeaderWithIdAndDuplicate([])\n                setRowsWithIdAndDuplicate([])\n            }\n\n        }\n        reader.readAsText(files[0]);\n\n    }\n\n    return (\n        <div className={'app'}>\n            <ReactFileReader fileTypes={\".csv\"} handleFiles={handleFiles}>\n                <button className='btn'>Import users</button>\n            </ReactFileReader>\n            {isValidFile\n                ? <table>\n                    <Header headerNames={headerWithIdAndDuplicate}/>\n                    <Rows rows={rowsWithIdAndDuplicate}\n                          headerNames={headerWithIdAndDuplicate}\n                          phonesArr={phonesArr}\n                          emailsArr={emailsArr}\n                    />\n                </table>\n                : <Error/>\n            }\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}